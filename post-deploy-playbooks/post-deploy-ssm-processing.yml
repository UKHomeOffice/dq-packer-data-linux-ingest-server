---
- name: Post Deploy SSM Processing Features
  hosts: all
  gather_facts: false
  become: yes
  tasks:
  - name: Yum Install Dependencies for SSM ADT EXT Server scripts
    yum: name={{ item }}
    with_items:
      - python-psycopg2
      - python-argparse
      - libxml2-python
      - cloud-utils

  - name: Add additional directories for Wherescape user
    file:
      path: /{{ item }}
      state: directory
      mode: 0775
      recurse: yes
      owner: wherescape
      group: SSM
    with_items:
      - appdata/ADT/log
      - /NATS/scripts
      - /NATS/scripts/check_run.sh

  - name: Yum Install pyodbc dependencies
    yum: name={{ item }}
    with_items:
      - unixODBC
      - unixODBC-devel
      - gcc-c++
      - python-devel

  - name: Pip Install pyodbc
    pip: name={{ item }}
    with_items:
      - pyodbc

  - name: Delete wherescape cron
    shell: rm /var/spool/cron/wherescape

  - name: '{{ item.name }}'
    cron:
      user: '{{ item.user }}'
      minute: '{{ item.minute }}'
      hour: '{{ item.hour }}'
      day: '{{ item.day }}'
      job: '{{ item.job }}'
    with_items:
        - { name: Cron sftp_nats_client_maytech.py, user: wherescape, minute: "*/1",  hour: "*", day: "*",  job: sh -c ". /etc/profile.d/script_envs.sh && cd /NATS/scripts && ./check_run.sh ./sftp_nats_client_maytech.py > /dev/null 2> /dev/null" }
        - { name: Cron nats_house_keeping, user: wherescape, minute: "*/45",  hour: "*", day: "*", job: sh -c ". /etc/profile.d/script_envs.sh && /NATS/scripts/nats_house_keeping.sh > /dev/null 2> /dev/null" }
        - { name: Cron ftp_acl_web02.py, user: wherescape, minute: "*/10",  hour: "0", day: "*",  job: sh -c ". /etc/profile.d/script_envs.sh && cd /ADT/scripts && python ftp_acl_web02.py" }
        - { name: Cron sftp_oag_client_maytech.py, user: wherescape, minute: "*/2",  hour: "*", day: "*",  job: sh -c  ". /etc/profile.d/script_envs.sh && cd /ADT/scripts && python sftp_oag_client_maytech.py > /dev/null 2> /dev/null" }

  - name: Download cloudwatch logs agent
    get_url:
      url: https://s3.amazonaws.com//aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
      dest: /tmp/awslogs-agent-setup.py
      mode: "+x"

  - name: Create Cloudwatch logs file
    file:
      path: /usr/bin/startcloudwatchlogs.sh
      state: file
      owner: root
      group: root
      mode: 0755

  - name: Write Cloudwatch logs file
    copy:
      dest: /usr/bin/startcloudwatchlogs.sh
      content: |
        #!/bin/sh
        # Get the instance region and inject it in the conf
        REGION=$(ec2metadata --availability-zone | head -c-2)
        sed -i -e 's/.*region.*/region = '$REGION'/' /var/awslogs/etc/aws.conf
        # Restart the awslogs agent
        service awslogs restart

  - name: Cloudwatch logs config
    copy:
      dest: /tmp/cwlogs.conf
      content: |
        [general]
        state_file = /var/awslogs/state/agent-state
        [/var/log/messages]
        file = /var/log/messages
        log_group_name = /dataingest/linux
        log_stream_name = {instance_id}
        datetime_format = %b %d %H:%M:%S

  - name: Install cloudwatch log agent
    environment:
      LC_ALL: C
    shell: /tmp/awslogs-agent-setup.py --region eu-west-2 --non-interactive -c /tmp/cwlogs.conf
    args:
        creates: /var/awslogs/etc/aws.conf

  - name: Make Cron Job to start awslogs with right region
    cron:
      name: Start awslogs
      special_time: reboot
      job: /usr/bin/startcloudwatchlogs.sh

  - name: Delete PM2 process
    shell: pm2 delete all
    become_user: wherescape

  - name: Start Data Transfer
    shell: cd /appdata/data-transfer && \
           source ~/.virtualenvs/data-transfer/bin/activate && \
           export PYTHONPATH=. && \
           pm2 start -u wherescape ecosystem.config.js
    become: true
    become_user: wherescape
    args:
      chdir: /appdata/data-transfer

  - name: Saving PM2 state to enable restart
    command: pm2 save
    become: true
    become_user: wherescape
    args:
      chdir: /appdata/data-transfer