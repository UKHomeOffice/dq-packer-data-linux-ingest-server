---
- name: Pre-reqs for ansible to run
  hosts: all
  gather_facts: false
  become: yes
  pre_tasks:
    - raw: test -e /usr/bin/python || ( yum -y update && yum install -y python-minimal )

- name: Build Data Ingest Linux Server.
  hosts: all
  become: true
  tasks:
  - name: SSM Group
    group:
      name: SSM
      system: yes

  - name: Create wherescape user
    user:
      name: wherescape
      group: SSM

  - name: Make directory structure
    file:
      path: /{{ item }}
      state: directory
      mode: 0775
      recurse: yes
      owner: wherescape
      group: SSM
    with_items:
      - ADT
      - EF
      - NATS
      - appdata
      - appdata/ADT
      - appdata/ADT/archive
      - appdata/ADT/archive/07032016acl
      - appdata/ADT/archive/07032016oag
      - appdata/ADT/archive/acl
      - appdata/ADT/archive/mvt
      - appdata/ADT/archive/oag
      - appdata/ADT/data
      - appdata/ADT/data/07032016acl
      - appdata/ADT/data/07032016oag
      - appdata/ADT/data/acl
      - appdata/ADT/data/mvt
      - appdata/ADT/data/oag
      - appdata/ADT/log
      - appdata/ADT/quarantine
      - appdata/ADT/quarantine/acl
      - appdata/ADT/quarantine/mvt
      - appdata/ADT/quarantine/oag
      - appdata/ADT/scripts
      - appdata/ADT/stage
      - appdata/ADT/stage/acl
      - appdata/ADT/stage/maytech
      - appdata/ADT/stage/mvt
      - appdata/ADT/stage/oag
      - appdata/EF
      - appdata/EF/data
      - appdata/EF/data/drt
      - appdata/EF/keys
      - appdata/EF/log
      - appdata/EF/scripts
      - appdata/NATS
      - appdata/NATS/archive
      - appdata/NATS/archive/nats
      - appdata/NATS/data
      - appdata/NATS/data/nats
      - appdata/NATS/data/ga
      - appdata/NATS/log
      - appdata/NATS/quarantine
      - appdata/NATS/quarantine/nats
      - appdata/NATS/scripts
      - appdata/NATS/stage
      - appdata/NATS/stage/maytech
      - appdata/NATS/stage/nats

  - file:
      src: /appdata/ADT
      dest: /ADT
      force: yes
      owner: wherescape
      group: SSM
      state: link

  - file:
      src: /appdata/EF
      dest: /EF
      force: yes
      owner: wherescape
      group: SSM
      state: link

  - file:
      src: /appdata/NATS
      dest: /NATS
      force: yes
      owner: wherescape
      group: SSM
      state: link

  - name: Create .ssh directory for Wherescape user
    file:
      path: /home/wherescape/.ssh
      state: directory
      mode: 0700
      owner: wherescape
      group: SSM

  - name: Create authorized_keys file for Wherescape user
    copy:
      content: ""
      dest: /home/wherescape/.ssh/authorized_keys
      force: no
      mode: 0600
      owner: wherescape
      group: SSM

  - name: Yum Install Pre Dependencies
    yum: name={{ item }}
    with_items:
      - epel-release
      - gcc
      - pcre-devel
      - openssl-devel
      - zlib-devel
      - wget
      - unzip
    become: true

  - name: Yum Install Dependencies
    yum: name={{ item }}
    with_items:
      - python-pip
      - git
      - cloud-utils
      - nodejs
    become: true

  - name: Yum Install Dependencies for SSM ADT EXT Server scripts
    yum: name={{ item }}
    with_items:
      - python-psycopg2
      - python-argparse
      - libxml2-python
      - cloud-utils

  - name: Yum Install pyodbc dependencies
    yum: name={{ item }}
    with_items:
      - unixODBC
      - unixODBC-devel
      - gcc-c++
      - python-devel

  - name: Install Python 2.7
    unarchive:
     src: https://www.python.org/ftp/python/2.7.10/Python-2.7.10.tgz
     dest: /usr/src
     remote_src: yes
    become: true

  - name: Configure Python 2.7
    shell: ./configure
    args:
      chdir: /usr/src/Python-2.7.10
      creates: /usr/src/Python-2.7.10/Modules
    become: true

  - name: Pip Install Dependencies
    pip: 'name={{ item }}'
    with_items:
      - AWSCLI
      - ftputil
      - virtualenv
      - psycopg2-binary
      - pyodbc
    become: true

  - name: GET config files from DQ-config-bucket
    shell: '{{ item }}'
    with_items:
      - aws s3 cp s3://dq-config-bucket/dq-data-ingest-linux-server /tmp/install --recursive

  - name: Install Postgresql 9.6
    shell: '{{ item }}'
    with_items:
      - rpm -ivh https://yum.postgresql.org/9.6/redhat/rhel-7.3-x86_64/pgdg-centos96-9.6-3.noarch.rpm
      - yum update -y
      - yum install -y postgresql96

  - name: Create and set permissions of /var/log/*.log to wherescape for log files
    copy:
      content: ""
      dest: /var/log/{{ item.src }}
      force: no
      owner: wherescape
      group: SSM
      mode: 0775
    with_items:
      - { src: freshclam.log }
      - { src: clamd.scan }

  - name: ClamAV Install Packages
    shell: '{{ item }}'
    with_items:
      - yum -y install clamav-server clamav-data clamav-update clamav-filesystem clamav clamav-scanner-systemd clamav-devel clamav-lib clamav-server-systemd

  - name: ClamAV SELinux configuration
    shell: '{{ item }}'
    with_items:
      - setenforce 0
      - setsebool -P antivirus_can_scan_system 1
      - setsebool -P clamd_use_jit 0

  - name: ClamAV Configuration
    copy:
      src: '/tmp/install/scan.conf'
      dest: '{{ item }}'
      remote_src: yes
      force: yes
    with_items:
      - /etc/clamd.d/scan.conf
      - /etc/clamd.d/scan.conf.backup
      - /etc/clamd.conf

  - name: Freshclam Additional Configuration
    shell: '{{ item }}'
    with_items:
      - sed -i -e "s/^Example/#Example/" /etc/freshclam.conf
      - freshclam

  - name: Freshclam Configuration Files
    shell: cp /etc/freshclam.conf /etc/freshclam.conf.backup && \
           cp /tmp/install/freshclam.service /usr/lib/systemd/system/freshclam.service

  - name: Cron Freshclam
    cron:
      minute: "0"
      hour: "01,13"
      day: "*"
      job: "/usr/bin/freshclam --quiet"

  - name: Start, Enable Freshclam
    shell: '{{ item }}'
    with_items:
      - systemctl start freshclam
      - systemctl enable freshclam

  - name: Set permissions on ClamD socket
    file:
      path: /var/run/clamd.scan
      state: directory
      owner: wherescape
      group: SSM
      mode: 0775
      recurse: yes

  - name: Start, Enable Clamd
    shell: '{{ item }}'
    with_items:
      - systemctl start clamd@scan
      - systemctl enable clamd@scan
    become: true

  - name: Add Wherescape user to clamscan group now it exists
    user:
      name: wherescape
      groups: clamscan
      append: yes

  - name: Copy ClamAV permissions script
    copy:
      src: scripts/clamav_permissions.sh
      dest: /usr/bin/clamav_permissions.sh
      owner: root
      group: root
      mode: 0755

  - name: Make Cron Job to set permissions at each reboot
    cron:
      name: Set ClamAV permissions
      special_time: reboot
      job: /usr/bin/clamav_permissions.sh
      state: present

  - name: Clone Data Transfer from Github
    git:
      repo: https://github.com/UKHomeOffice/data-transfer
      dest: '/appdata/data-transfer'
      force: yes
    become: true
    become_user: wherescape

 # Copy's the config file over and change permissions, before the venv is created.
  - name: Data Transfer Configuration
    command: cp /tmp/install/ecosystem.config.js /appdata/data-transfer

  - file:
      path: '/appdata/data-transfer/ecosystem.config.js'
      owner: wherescape
      group: SSM

  - name: Npm Install Data Transfer Dependencies
    npm:
      name: pm2
      global: yes

  - name: Configure Data Transfer
    shell: cd /appdata/data-transfer && \
           python2.7 -m virtualenv ~/.virtualenvs/data-transfer && \
           source ~/.virtualenvs/data-transfer/bin/activate && \
           pip install -r /appdata/data-transfer/requirements.txt
    become: true
    become_user: wherescape

  - name: Check PM2 Startup Script is present
    command: pm2 startup -u wherescape --hp /home/wherescape
    args:
      creates: /etc/systemd/system/pm2-wherescape.service
    tags: pm2_startup_script

 # Other script setup
  - name: Clone script repos from Github
    git:
      repo: '{{ item.repo }}'
      dest: '{{ item.dest }}'
      clone: yes
      update: no
    with_items:
      - { repo: 'https://github.com/UKHomeOffice/dq_sftp-nats-dmz/', dest: '/opt/dq_sftp-nats-dmz' }
      - { repo: 'https://github.com/UKHomeOffice/dq-ssm_ingest/', dest: '/opt/dq-ssm_ingest' }
    become: true

  - name: Symlink script files in opt
    file:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      force: yes
      state: link
    with_items:
      - { src: '/opt/dq_sftp-nats-dmz/NATS/scripts/', dest: '/appdata/NATS/scripts'}

  - name: Update NATS permissions to wherescape user
    shell: "{{ item }}"
    with_items:
      - setfacl -m u:wherescape:rwx /NATS/scripts
      - setfacl -m u:wherescape:rwx /NATS/scripts/check_run.sh
    become: true

  - name: Copy SSM Ingest files to ADT
    command: cp -R {{ item }}. /appdata/ADT/scripts
    with_items:
      - /opt/dq-ssm_ingest/ADT/

  - name: Copy scripts to /ADT/scripts
    copy:
      src: scripts/{{ item.src }}
      dest: /ADT/scripts
      owner: wherescape
      group: SSM
      mode: 0775
    with_items:
      - { src: acl_backup.sh }
      - { src: acl_download.sh }
      - { src: pm2_startup.sh }

  - name: Set permissions of /appdata/ADT/scripts to wherescape for log files
    file:
      path: /appdata/ADT/scripts
      owner: wherescape
      group: SSM
      mode: 0775
      recurse: yes

  - name: '{{ item.name }}'
    cron:
      user: '{{ item.user }}'
      minute: '{{ item.minute }}'
      hour: '{{ item.hour }}'
      day: '{{ item.day }}'
      job: '{{ item.job }}'
    with_items:
        - { name: Cron sftp_nats_client_maytech.py, user: wherescape, minute: "*/1",  hour: "*", day: "*",  job: sh -c ". /etc/profile.d/script_envs.sh && cd /NATS/scripts && ./check_run.sh ./sftp_nats_client_maytech.py > /dev/null 2> /dev/null" }
        - { name: Cron ftp_acl_web02.py, user: wherescape, minute: "*/10",  hour: "0", day: "*",  job: sh -c "#NotRunning#. /etc/profile.d/script_envs.sh && cd /ADT/scripts && python ftp_acl_web02.py" }
        - { name: Cron ACL Backups, user: wherescape, minute: "*/5", hour: "*", day: "*", job: sh -c "#NotRunning#. /etc/profile.d/script_envs.sh && cd /ADT/scripts && ./acl_backup.sh > /ADT/log/acl_backup_$(date +\%Y\%m\%d_\%H-\%M).log 2>&1" }

  - name: Set DNS Resolver Options
    blockinfile:
      path: /etc/sysconfig/network
      block: |
        RES_OPTIONS="rotate timeout:1 attempts:1"

  - name: Secure sshd_config
    lineinfile: dest=/etc/ssh/sshd_config
                regexp="^PermitRootLogin"
                line="PermitRootLogin no"
                state=present
  - lineinfile: dest=/etc/ssh/sshd_config
                regexp="^PasswordAuthentication"
                line="PasswordAuthentication no"
                state=present
  - lineinfile: dest=/etc/ssh/sshd_config
                regexp="^X11Forwarding"
                line="X11Forwarding no"
                state=present

  - name: Download cloudwatch logs agent
    get_url:
      url: https://s3.amazonaws.com//aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
      dest: /tmp/awslogs-agent-setup.py
      mode: "+x"

  - name: Cloudwatch logs config
    copy:
      dest: /tmp/cwlogs.conf
      content: |
        [general]
        state_file = /var/awslogs/state/agent-state
        [/var/log/messages]
        file = /var/log/messages
        log_group_name = /Centos_Server/messages
        log_stream_name = {hostname}
        datetime_format = %b %d %H:%M:%S
        [/Centos_Server/cloud-init]
        file = /var/log/cloud-init.log
        log_group_name = /Centos_Server/cloud-init
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/cron]
        file = /var/log/cron
        log_group_name = /Centos_Server/cron
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/secure]
        file = /var/log/secure
        log_group_name = /Centos_Server/secure
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/yum]
        file = /var/log/yum.log
        log_group_name = /Centos_Server/yum
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/freshclam]
        file = /var/log/freshclam.log
        log_group_name = /Centos_Server/freshclam
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/clamd.scan]
        file = /var/log/clamd.scan
        log_group_name = /Centos_Server/clamd.scan
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/datatransfer-acl-to-s3-archive]
        file = /appdata/data-transfer/acl-to-s3-archive.log
        log_group_name = /Centos_Server/datatransfer-acl-to-s3
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/datatransfer-nats-to-s3-archive]
        file = /appdata/data-transfer/nats-to-s3-archive.log
        log_group_name = /Centos_Server/datatransfer-nats-to-s3-archive
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/datatransfer-nats-to-s3-ga]
        file = /appdata/data-transfer/nats-to-s3-ga.log
        log_group_name = /Centos_Server/datatransfer-nats-to-s3-ga
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/datatransfer-oag-to-s3-archive]
        file = /appdata/data-transfer/oag-to-s3-archive.log
        log_group_name = /Centos_Server/datatransfer-oag-to-s3-archive
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/datatransfer-oag-from-s3-local]
        file = /appdata/data-transfer/oag-from-s3-local.log
        log_group_name = /Centos_Server/datatransfer-oag-from-s3-local
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/acl_db_backup]
        file = /ADT/log/acl_backup_*.log
        log_group_name = /Centos_Server/acl_db_backup
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/sftp_NATS]
        file = /ADT/log/sftp_nats_*.log
        log_group_name = /Centos_Server/sftp_NATS
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f
        [/Centos_Server/ftp_ACL]
        file = /ADT/log/ftp_acl.log
        log_group_name = /Centos_Server/ftp_ACL
        log_stream_name = {hostname}
        datetime_format = %Y-%m-%d %H:%M:%S,%f

  - name: Install cloudwatch log agent
    environment:
      LC_ALL: C
    shell: /tmp/awslogs-agent-setup.py --region eu-west-2 --non-interactive -c /tmp/cwlogs.conf
    args:
      creates: /var/awslogs/etc/aws.conf

  - name: Copy Cloudwatch logs file
    copy:
      src: scripts/startcloudwatchlogs.sh
      dest: /usr/bin/startcloudwatchlogs.sh
      owner: root
      group: root
      mode: 0755

  - name: Make Cron Job to start awslogs with right region
    cron:
      name: Start awslogs
      special_time: reboot
      job: /usr/bin/startcloudwatchlogs.sh
      state: present

  - name: Add directories to Logrotate
    blockinfile:
      dest: /etc/logrotate.conf
      insertafter: EOF
      block: |
        /ADT/log/ {
        missingok
        rotate 7
        }
        /NATS/log {
        missingok
        rotate 7
        }
