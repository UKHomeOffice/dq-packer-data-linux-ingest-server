---

- name: Pre-reqs for ansible to run
  hosts: all
  gather_facts: false
  become: yes
  pre_tasks:
    - raw: test -e /usr/bin/python || ( yum -y update && yum install -y python-minimal )

- name: Build Data Ingest Linux Server.
  hosts: all
  become: yes
  tasks:
    - yum: name=gcc
    - yum: name=pcre-devel
    - yum: name=openssl-devel
    - yum: name=zlib-devel
    - yum: name=wget
    - yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm
    - yum: name=python-pip
    - yum: name=epel-release
    - yum: name=https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-redhat96-9.6-3.noarch.rpm
    - yum: name=postgresql96
    - yum: name=centos-release-scl
    - yum: name=python27
    - yum: name=clamav state=latest
    - yum: name=git
    - yum: name=cloud-utils
    - pip: name=virtualenv
    - pip: name=virtualenvwrapper
    - pip: name=AWSCLI
    - pip: name=ftputil

    - name: Make directory structure
      file:
        path: /{{ item }}
        state: directory
        mode: 0775
        recurse: yes
      with_items:
        - ADT
        - EF
        - NATS
        - appdata
        - appdata/ADT
        - appdata/ADT/archive
        - appdata/ADT/archive/07032016acl
        - appdata/ADT/archive/07032016oag
        - appdata/ADT/archive/acl
        - appdata/ADT/archive/mvt
        - appdata/ADT/archive/oag
        - appdata/ADT/data
        - appdata/ADT/data/07032016acl
        - appdata/ADT/data/07032016oag
        - appdata/ADT/data/acl
        - appdata/ADT/data/mvt
        - appdata/ADT/data/oag
        - appdata/ADT/quarantine
        - appdata/ADT/quarantine/acl
        - appdata/ADT/quarantine/mvt
        - appdata/ADT/quarantine/oag
        - appdata/ADT/scripts
        - appdata/ADT/stage
        - appdata/ADT/stage/acl
        - appdata/ADT/stage/maytech
        - appdata/ADT/stage/mvt
        - appdata/ADT/stage/oag
        - appdata/EF
        - appdata/EF/data
        - appdata/EF/data/drt
        - appdata/EF/keys
        - appdata/EF/log
        - appdata/EF/scripts
        - appdata/NATS
        - appdata/NATS/archive
        - appdata/NATS/archive/nats
        - appdata/NATS/data
        - appdata/NATS/data/nats
        - appdata/NATS/log
        - appdata/NATS/quarantine
        - appdata/NATS/quarantine/nats
        - appdata/NATS/scripts
        - appdata/NATS/stage
        - appdata/NATS/stage/maytech
        - appdata/NATS/stage/nats

    - file:
        src: /appdata/ADT
        dest: /ADT
        force: yes
        state: link

    - file:
        src: /appdata/EF
        dest: /EF
        force: yes
        state: link

    - file:
        src: /appdata/NATS
        dest: /NATS
        force: yes
        state: link

    - name: SSM Group
      group:
        name: SSM
        system: yes

    - name: Create wherescape user
      user:
        name: wherescape
        group: SSM

    - name: Clone script repos from Github
      git:
        repo: '{{ item.repo }}'
        dest: '{{ item.dest }}'
        clone: yes
        update: no
      with_items:
        - { repo: 'https://github.com/UKHomeOffice/dq_sftp-nats-dmz/', dest: '/opt/dq_sftp-nats-dmz' }
        - { repo: 'https://github.com/UKHomeOffice/dq-ssm_ingest/', dest: '/opt/dq-ssm_ingest' }

    - name: Symlink script files in opt
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        force: yes
        state: link
      with_items:
        - { src: '/opt/dq_sftp-nats-dmz/NATS/scripts/', dest: '/appdata/NATS/scripts'}
        - { src: '/opt/dq-ssm_ingest/ADT/WEB_Server/', dest: '/appdata/ADT/scripts'}

    - name: '{{ item.name }}'
      cron:
        user: '{{ item.user }}'
        minute: '{{ item.minute }}'
        hour: '{{ item.hour }}'
        day: '{{ item.day }}'
        job: '{{ item.job }}'
      with_items:
          - { name: Cron sftp_nats_client_maytech.py, user: wherescape, minute: "*/1",  hour: "*", day: "*",  job: "cd /NATS/scripts && ./check_run.sh ./sftp_nats_client_maytech.py > /dev/null 2> /dev/null" }
          - { name: Cron nats_house_keeping, user: wherescape, minute: "*/45",  hour: "*", day: "*", job: "/NATS/scripts/nats_house_keeping.sh > /dev/null 2> /dev/null" }
          - { name: Cron ftp_acl_web02.py, user: wherescape, minute: "*/10",  hour: "0", day: "*",  job: "/ADT/scripts/ftp_acl_web02.py" }

    - name: Clone Data Transfer from Github
      git:
        repo: 'https://github.com/UKHomeOffice/data-transfer'
        dest: /lib/data-transfer
        clone: yes
        update: no

    - name: Install Data Transfer
      shell: "{{ item }}"
      args:
        chdir: /lib
      with_items:
          - python3 -m venv ~/.virtualenvs/data-transfer
          - source ~/.virtualenvs/data-transfer/bin/activate

    - name: Install Data Transfer dependencies
      shell: pip install -e . -r requirements.txt
      args:
        chdir: /lib/data-transfer

    - name: Export data-transfer path
      shell: export PYTHONPATH=.
      args:
        chdir: /lib/data-transfer

    - name: Set DNS Resolver Options
      blockinfile:
        path: /etc/sysconfig/network
        block: |
          RES_OPTIONS="rotate timeout:1 attempts:1"